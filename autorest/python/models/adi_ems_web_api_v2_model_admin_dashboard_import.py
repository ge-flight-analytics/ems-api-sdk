# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class AdiEmsWebApiV2ModelAdminDashboardImport(Model):
    """Represents a message used to provide information to users about an action
    that took place in an API request.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :param dashboard: The deserialized
     {Adi.Ems.Web.Api.V2.Model.Admin.DashboardImport.Dashboard} instance
     created in the import process.
    :type dashboard: ~swagger.models.AdiEmsWebApiV2ModelAdminDashboard
    :param messages: A list of messages indicating the status of the import
     and any extra information that may be useful to
     convey to a user performing an import.
    :type messages: list[~swagger.models.AdiEmsWebApiV2ModelApiMessage]
    :ivar has_errors: A value indicating whether any of the messages included
     in this instance is an error.
    :vartype has_errors: bool
    :ivar has_warnings: A value indicating whether any of the messages
     included in this instance is a warning.
    :vartype has_warnings: bool
    """

    _validation = {
        'has_errors': {'readonly': True},
        'has_warnings': {'readonly': True},
    }

    _attribute_map = {
        'dashboard': {'key': 'dashboard', 'type': 'AdiEmsWebApiV2ModelAdminDashboard'},
        'messages': {'key': 'messages', 'type': '[AdiEmsWebApiV2ModelApiMessage]'},
        'has_errors': {'key': 'hasErrors', 'type': 'bool'},
        'has_warnings': {'key': 'hasWarnings', 'type': 'bool'},
    }

    def __init__(self, dashboard=None, messages=None):
        super(AdiEmsWebApiV2ModelAdminDashboardImport, self).__init__()
        self.dashboard = dashboard
        self.messages = messages
        self.has_errors = None
        self.has_warnings = None
